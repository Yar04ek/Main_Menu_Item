import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Children, cloneElement, Component } from 'react';
import classNames from 'classnames';
import Sidebar from './sidebar';
import styles from './content-layout.css';
/**
 * @name Content Layout
 */
export default class ContentLayout extends Component {
    static defaultProps = {
        responsive: true,
    };
    state = {
        contentNode: null,
    };
    saveContentNode = (contentNode) => {
        this.setState({ contentNode });
    };
    render() {
        const { children, className, contentClassName, responsive, ...restProps } = this.props;
        const classes = classNames(styles.contentLayout, className, {
            [styles.contentLayoutResponsive]: responsive,
        });
        const contentClasses = classNames(styles.contentLayoutContent, contentClassName);
        const childrenArray = Children.toArray(children);
        const sidebarChild = childrenArray.filter((child) => child != null && typeof child === 'object' && 'type' in child && child.type === Sidebar)[0];
        const sidebar = sidebarChild &&
            cloneElement(sidebarChild, {
                contentNode: this.state.contentNode,
            });
        const contentChildren = childrenArray.filter(child => child !== sidebarChild);
        return (_jsxs("div", { "data-test": "content-layout", ...restProps, className: classes, children: [sidebar, _jsx("main", { className: contentClasses, ref: this.saveContentNode, children: contentChildren })] }));
    }
}
export { default as Sidebar } from './sidebar';
