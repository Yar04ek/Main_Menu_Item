import AuthRequestBuilder from './request-builder';
import AuthStorage from './storage';
export declare const HUB_AUTH_PAGE_OPENED = "HUB_AUTH_PAGE_OPENED";
export default class BackgroundFlow {
    _requestBuilder: AuthRequestBuilder;
    _storage: AuthStorage;
    _timeout: number;
    private _promise?;
    constructor(requestBuilder: AuthRequestBuilder, storage: AuthStorage, timeout: number);
    /**
     * Creates a hidden iframe
     * @return {HTMLIFrameElement}
     * @private
     */
    private _createHiddenFrame;
    /**
     * Redirects the given iframe to the given URL
     * @param {HTMLIFrameElement} iframe
     * @param {string} url
     * @private
     */
    _redirectFrame(iframe: HTMLIFrameElement, url: string): void;
    /**
     * Refreshes the access token in an iframe.
     *
     * @return {Promise.<string>} promise that is resolved to access the token when it is loaded in a background iframe. The
     * promise is rejected if no token was received after {@link BackgroundToken.BACKGROUND_TIMEOUT} ms.
     */
    private _load;
    authorize(): Promise<string>;
}
