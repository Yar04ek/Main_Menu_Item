import { jsx as _jsx } from "react/jsx-runtime";
import { Component } from 'react';
import classNames from 'classnames';
import Input from '../input/input';
import sniffr from '../global/sniffer';
import { ActiveItemContext } from '../list/list';
import { I18nContext } from '../i18n/i18n-context';
import styles from './select-popup.css';
function noop() { }
export default class SelectFilter extends Component {
    static defaultProps = {
        inputRef: noop,
    };
    componentWillUnmount() {
        this.blur();
    }
    focus() {
        const { input } = this;
        if (input && input !== document.activeElement) {
            if (sniffr.browser.name === 'firefox') {
                input.select();
            }
            else {
                input.focus();
            }
        }
    }
    blur() {
        if (this.input && this.input === document.activeElement) {
            this.input.blur();
        }
    }
    input;
    inputRef = (el) => {
        this.input = el;
        this.props.inputRef(el);
    };
    render() {
        const { className, listId, ...restProps } = this.props;
        const classes = classNames(styles.filter, className);
        return (_jsx(ActiveItemContext.ValueContext.Consumer, { children: activeItemId => (_jsx(I18nContext.Consumer, { children: ({ translate }) => (_jsx(Input, { ...restProps, placeholder: restProps.placeholder ?? translate('filterItems'), "aria-owns": listId, "aria-activedescendant": activeItemId, autoComplete: "off", autoFocus: true, borderless: true, inputRef: this.inputRef, className: classes })) })) }));
    }
}
