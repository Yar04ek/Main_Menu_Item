import { HTMLAttributes, PureComponent, ReactElement } from 'react';
import * as React from 'react';
export interface UserCardUser {
    name: string;
    login: string;
    avatarUrl?: string | null | undefined;
    email?: string | null | undefined;
    href?: string | null | undefined;
    online?: boolean | null | undefined;
    banned?: boolean | null | undefined;
    banReason?: string | undefined;
    unverifiedEmail?: boolean | null | undefined;
}
export interface UserCardTranslations {
    banned: string;
    online: string;
    offline: string;
    copyToClipboard?: string;
    copiedToClipboard?: string;
    copingToClipboardError?: string;
    unverified?: string;
}
export interface UserCardProps extends HTMLAttributes<HTMLDivElement> {
    user: UserCardUser;
    translations?: UserCardTranslations | null | undefined;
    info?: ReactElement | readonly ReactElement[] | string;
    avatarInfo?: ReactElement | readonly ReactElement[] | string;
    'data-test'?: string | null | undefined;
}
export default class UserCard extends PureComponent<UserCardProps> {
    static contextType: React.Context<import("../i18n/i18n-context").I18nContextProps>;
    context: React.ContextType<typeof UserCard.contextType>;
    copyEmail: () => void;
    render(): import("react/jsx-runtime").JSX.Element;
}
export type UserCardAttrs = React.JSX.LibraryManagedAttributes<typeof UserCard, UserCardProps>;
