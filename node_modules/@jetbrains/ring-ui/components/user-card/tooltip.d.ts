import { Component, ReactElement, ReactNode } from 'react';
import { DropdownAttrs } from '../dropdown/dropdown';
import { UserCardAttrs, UserCardUser } from './card';
interface ChildrenProps {
    active: boolean;
    pinned: boolean;
}
export interface UserCardTooltipProps extends Omit<UserCardAttrs, 'children' | 'user'> {
    user?: UserCardUser | null | undefined;
    children: ReactElement | readonly ReactElement[] | string | ((props: ChildrenProps) => ReactNode);
    dropdownProps: Partial<DropdownAttrs>;
    renderUserCard: (props: UserCardAttrs) => ReactNode;
    renderNoUser: () => ReactNode;
}
export default class UserCardTooltip extends Component<UserCardTooltipProps> {
    static defaultProps: {
        renderUserCard: (props: UserCardAttrs) => import("react/jsx-runtime").JSX.Element;
        renderNoUser: () => string;
        dropdownProps: {
            hoverShowTimeOut: number;
            hoverHideTimeOut: number;
        };
    };
    render(): import("react/jsx-runtime").JSX.Element;
}
export type UserCardTooltipAttrs = React.JSX.LibraryManagedAttributes<typeof UserCardTooltip, UserCardTooltipProps>;
export {};
