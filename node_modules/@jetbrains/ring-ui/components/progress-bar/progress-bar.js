import { jsx as _jsx } from "react/jsx-runtime";
import { PureComponent } from 'react';
import classNames from 'classnames';
import styles from './progress-bar.css';
/**
 * @name Progress Bar
 */
export default class ProgressBar extends PureComponent {
    /**
     * @param {number} value The progress task value
     * @param {number} max The maximum value
     * @return {number} The progress task value in percents
     * @private
     */
    static toPercent(value, max) {
        const HUNDRED_PERCENT = 100;
        const percents = (value * HUNDRED_PERCENT) / max;
        return percents > HUNDRED_PERCENT ? HUNDRED_PERCENT : percents;
    }
    static defaultProps = {
        max: 1.0,
        value: 0,
        label: 'Progress',
    };
    progressbarWrapper;
    progressbarWrapperRef = (el) => {
        this.progressbarWrapper = el;
    };
    progressbar;
    progressbarRef = (el) => {
        this.progressbar = el;
    };
    render() {
        const { className, global, max, value, label, staticColor, ...otherProps } = this.props;
        const width = value ? `${ProgressBar.toPercent(value, max)}%` : undefined;
        const classes = classNames(styles.progressBar, className, {
            [styles.globalMode]: global,
            [styles.staticLineColor]: staticColor,
        });
        return (_jsx("div", { ...otherProps, className: classes, ref: this.progressbarWrapperRef, children: _jsx("div", { className: styles.line, ref: this.progressbarRef, role: "progressbar", "aria-label": label, "aria-valuenow": value, "aria-valuemin": 0, "aria-valuemax": max, style: { width } }) }));
    }
}
