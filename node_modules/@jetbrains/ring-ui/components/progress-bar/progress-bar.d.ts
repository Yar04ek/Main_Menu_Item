import { HTMLAttributes, PureComponent } from 'react';
export interface ProgressBarProps extends HTMLAttributes<HTMLElement> {
    /**
     * A floating point number that specifies minimum completion rate for a task to be considered
     * complete. Default value is 1.0.
     * @type {number}
     */
    max: number;
    /**
     * A floating point number that specifies current task completion rate.
     * @type {number}
     */
    value: number;
    label: string;
    /**
     * Sets the ring-progress-bar_global class to position the progress bar on top of the screen.
     * Should be placed directly inside body, will be positioned right below .ring-header
     * if placed adjacent to it.
     * @type {boolean}
     */
    global?: boolean | null | undefined;
    /**
     * Disables Disabled progress bar color animation and sets it to static color.
     * @type {boolean}
     */
    staticColor?: boolean;
}
/**
 * @name Progress Bar
 */
export default class ProgressBar extends PureComponent<ProgressBarProps> {
    /**
     * @param {number} value The progress task value
     * @param {number} max The maximum value
     * @return {number} The progress task value in percents
     * @private
     */
    static toPercent(value: number, max: number): number;
    static defaultProps: {
        max: number;
        value: number;
        label: string;
    };
    progressbarWrapper?: HTMLElement | null;
    progressbarWrapperRef: (el: HTMLElement | null) => void;
    progressbar?: HTMLElement | null;
    progressbarRef: (el: HTMLElement | null) => void;
    render(): import("react/jsx-runtime").JSX.Element;
}
export type ProgressBarAttrs = React.JSX.LibraryManagedAttributes<typeof ProgressBar, ProgressBarProps>;
