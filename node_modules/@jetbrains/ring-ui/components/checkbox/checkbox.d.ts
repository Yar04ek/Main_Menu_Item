import { PureComponent, InputHTMLAttributes, CSSProperties, Ref, ReactNode } from 'react';
export interface CheckboxProps extends InputHTMLAttributes<HTMLInputElement> {
    label?: string | null | undefined;
    containerClassName?: string | null | undefined;
    containerStyle?: CSSProperties | undefined;
    cellClassName?: string | null | undefined;
    labelClassName?: string | null | undefined;
    indeterminate: boolean;
    inputRef?: Ref<HTMLInputElement>;
    help?: ReactNode;
}
/**
 * @name Checkbox
 */
/**
 * Displays a checkbox.
 */
export default class Checkbox extends PureComponent<CheckboxProps> {
    static defaultProps: {
        indeterminate: boolean;
    };
    componentDidMount(): void;
    componentDidUpdate(prevProps: CheckboxProps): void;
    input?: HTMLInputElement | null;
    inputRef: (el: HTMLInputElement | null) => void;
    composedInputRef: import("memoize-one").MemoizedFn<(...refs: (Ref<HTMLInputElement> | undefined)[]) => (value: HTMLInputElement | null) => void>;
    render(): import("react/jsx-runtime").JSX.Element;
}
