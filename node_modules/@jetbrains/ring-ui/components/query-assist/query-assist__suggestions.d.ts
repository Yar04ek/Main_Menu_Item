import { ListDataItem } from '../list/consts';
export interface QueryAssistSuggestion {
    description: string;
    group: string;
    icon?: string | undefined;
    option: string;
    prefix?: string | undefined;
    suffix?: string | undefined;
    className?: string | undefined;
    matchingStart?: number;
    matchingEnd?: number;
    caret?: number;
    completionStart?: number;
    completionEnd?: number;
}
export interface SuggestionItem {
    data?: QueryAssistSuggestion;
}
export default class QueryAssistSuggestions {
    static createKey(suggestion: QueryAssistSuggestion): string;
    static renderLabel(suggestion: QueryAssistSuggestion): import("react/jsx-runtime").JSX.Element;
    static renderGroupSeparator(suggestion: QueryAssistSuggestion, prevSuggestion: string): {
        key: string;
        description: string;
        rgItemType: import("../list/consts").Type;
    } | null;
    static renderList(suggestions: readonly QueryAssistSuggestion[], suggestionRenderer: (suggestion: QueryAssistSuggestion) => ListDataItem<SuggestionItem>): ListDataItem<SuggestionItem>[];
}
