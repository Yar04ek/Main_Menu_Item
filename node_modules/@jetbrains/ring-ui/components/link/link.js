import { jsx as _jsx } from "react/jsx-runtime";
import { PureComponent } from 'react';
import classNames from 'classnames';
import dataTests from '../global/data-tests';
import ClickableLink from './clickableLink';
import styles from './link.css';
export function linkHOC(ComposedComponent) {
    const isCustom = typeof ComposedComponent !== 'string' && ComposedComponent !== ClickableLink;
    return class Link extends PureComponent {
        render() {
            const { active, inherit, pseudo, hover, className, 'data-test': dataTest, href, children, onPlainLeftClick, onClick, ...restProps } = this.props;
            const useButton = pseudo || (!isCustom && href == null);
            const classes = classNames(styles.link, className, {
                [styles.active]: active,
                [styles.inherit]: inherit,
                [styles.hover]: hover,
                [styles.pseudo]: useButton,
            });
            let props = restProps;
            if (isCustom && !props.activeClassName) {
                props = { ...props, activeClassName: styles.active };
            }
            if (useButton) {
                return (_jsx("button", { type: "button", ...props, className: classes, onClick: (onClick || onPlainLeftClick), "data-test": dataTests('ring-link', dataTest), children: children }));
            }
            return (_jsx(ComposedComponent, { ...props, href: href, className: classes, onClick: onClick, onPlainLeftClick: onPlainLeftClick, "data-test": dataTests('ring-link', dataTest), children: children }));
        }
    };
}
export default linkHOC(ClickableLink);
