import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/**
 * @name User Agreement
 */
import { PureComponent } from 'react';
import classNames from 'classnames';
import Dialog from '../dialog/dialog';
import { Content, Header } from '../island/island';
import Panel from '../panel/panel';
import Button from '../button/button';
import { I18nContext } from '../i18n/i18n-context';
import style from './user-agreement.css';
function noop() { }
/**
 * A component that displays a user agreement dialog.
 */
export default class UserAgreement extends PureComponent {
    static defaultProps = {
        show: false,
        onAccept: noop,
        onDecline: noop,
        onClose: noop,
    };
    state = {
        scrolledDown: false,
    };
    onScrollToBottom = () => this.setState({ scrolledDown: true });
    render() {
        const { scrolledDown } = this.state;
        const { translations, onAccept, onDecline, onClose, onRemindLater, children, show, preview, className } = this.props;
        return (_jsx(I18nContext.Consumer, { children: ({ translate }) => (_jsxs(Dialog, { label: translations?.userAgreement ?? translate('userAgreement'), show: show, className: classNames(style.agreementDialog, className), contentClassName: style.dialogContent, trapFocus: true, autoFocusFirst: false, "data-test": "user-agreement", children: [_jsx(Header, { children: translations?.userAgreement ?? translate('userAgreement') }), _jsx(Content, { fade: true, onScrollToBottom: this.onScrollToBottom, children: children }), !preview && (_jsxs(Panel, { children: [onRemindLater && !scrolledDown && (_jsx("div", { className: style.suggestion, children: translations?.scrollToAccept ?? translate('scrollToAccept') })), _jsx(Button, { primary: true, disabled: !scrolledDown, onClick: onAccept, "data-test": "accept", children: translations?.accept ?? translate('accept') }), _jsx(Button, { onClick: onDecline, autoFocus: true, "data-test": "decline", children: translations?.decline ?? translate('decline') }), !onRemindLater && !scrolledDown && (_jsx("span", { className: style.suggestion, children: translations?.scrollToAccept ?? translate('scrollToAccept') })), onRemindLater && (_jsx(Button, { className: style.remindLaterButton, onClick: onRemindLater, "data-test": "later", children: translations?.remindLater ?? translate('remindLater') }))] })), preview && (_jsx(Panel, { children: _jsx(Button, { onClick: onClose, autoFocus: true, "data-test": "close", children: translations?.close ?? translate('close') }) }))] })) }));
    }
}
