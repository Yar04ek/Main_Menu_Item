import { PureComponent } from 'react';
import { FocusSensorProps } from '../global/focus-sensor-hoc';
import Row, { RowProps } from './row';
import { SelectionItem } from './selection';
export interface RowWithFocusSensorCallbacksProps<T extends SelectionItem> extends Omit<FocusSensorProps<RowProps<T>, HTMLTableRowElement, typeof Row>, 'onFocus'> {
    onFocus?: (item: T) => void;
    onSelect?: (item: T, selected: boolean) => void;
    onCollapse?: (item: T) => void;
    onExpand?: (item: T) => void;
}
export default class RowWithFocusSensorCallbacks<T extends SelectionItem> extends PureComponent<RowWithFocusSensorCallbacksProps<T>> {
    RowWithFocusSensor: import("react").ComponentType<FocusSensorProps<RowProps<T>, HTMLDivElement, typeof Row>>;
    onFocus: () => void;
    onSelect: (item: T, selected: boolean) => void;
    onCollapse: () => void;
    onExpand: () => void;
    render(): import("react/jsx-runtime").JSX.Element;
}
