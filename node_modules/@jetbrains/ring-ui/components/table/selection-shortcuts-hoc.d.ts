import { ComponentType } from 'react';
import { ShortcutsMap } from '../shortcuts/core';
import Selection, { SelectionItem } from './selection';
export interface SelectionShortcutsOuterProps<T extends SelectionItem> {
    selection: Selection<T>;
    selectable?: boolean | undefined;
    onSelect?: ((selection: Selection<T>) => void) | undefined;
    shortcuts?: ShortcutsMap | undefined;
}
export interface SelectionShortcutsAddProps<T extends SelectionItem> {
    selection: Selection<T>;
    selectable: boolean;
    onSelect: (selection: Selection<T>) => void;
    shortcutsMap: ShortcutsMap;
}
export type SelectionShortcutsProps<T extends SelectionItem, P> = Omit<P, keyof SelectionShortcutsAddProps<T>> & SelectionShortcutsOuterProps<T>;
export default function selectionShortcutsHOC<T extends SelectionItem, P extends SelectionShortcutsAddProps<T>>(ComposedComponent: ComponentType<P>): ComponentType<SelectionShortcutsProps<T, P>>;
