import { jsx as _jsx } from "react/jsx-runtime";
import { PureComponent } from 'react';
import focusSensorHOC from '../global/focus-sensor-hoc';
import Row from './row';
const getContainer = () => focusSensorHOC(Row);
export default class RowWithFocusSensorCallbacks extends PureComponent {
    // https://stackoverflow.com/a/53882322/6304152
    RowWithFocusSensor = getContainer();
    onFocus = () => {
        this.props.onFocus?.(this.props.item);
    };
    onSelect = (item, selected) => {
        this.props.onSelect?.(item, selected);
    };
    onCollapse = () => {
        this.props.onCollapse?.(this.props.item);
    };
    onExpand = () => {
        this.props.onExpand?.(this.props.item);
    };
    render() {
        return (_jsx(this.RowWithFocusSensor, { ...this.props, onFocus: this.onFocus, onSelect: this.onSelect, onCollapse: this.onCollapse, onExpand: this.onExpand }));
    }
}
