import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PureComponent } from 'react';
import classNames from 'classnames';
import Checkbox from '../checkbox/checkbox';
import getUID from '../global/get-uid';
import style from './table.css';
import HeaderCell from './header-cell';
export default class Header extends PureComponent {
    static defaultProps = {
        selectable: true,
        draggable: false,
        checked: true,
        sticky: true,
        topStickOffset: '0px',
        onSort: () => { },
        onCheckboxChange: () => { },
        sortKey: 'id',
        sortOrder: true,
    };
    id = getUID('table-header-');
    onCheckboxFocus = (event) => {
        event.currentTarget.blur();
    };
    createCells(widths = []) {
        const { selectable, draggable, columns, checked, checkboxDisabled, onCheckboxChange, onSort, sortKey, sortOrder } = this.props;
        const metaColumnClasses = classNames(style.metaColumn, style.headerMetaColumn);
        const metaColumn = (_jsx("div", { className: metaColumnClasses, children: selectable && (_jsx(Checkbox, { "aria-labelledby": this.id, disabled: checkboxDisabled, checked: checked, onChange: onCheckboxChange, onFocus: this.onCheckboxFocus })) }));
        return columns.map((column, index) => {
            const columnStyle = widths[index] ? { width: widths[index] } : undefined;
            const props = { column, onSort, sortKey, sortOrder, style: columnStyle };
            return (_jsx(HeaderCell, { "data-test": column.id, ...props, children: index === 0 && (draggable || selectable) && metaColumn }, column.id));
        });
    }
    render() {
        const { caption, sticky, topStickOffset } = this.props;
        const regularCells = this.createCells();
        return (_jsxs("thead", { id: this.id, "data-test": "ring-table-header", style: { top: topStickOffset }, className: classNames({
                [style.tableHead]: true,
                [style.subHeaderSticky]: sticky,
            }), children: [caption && (_jsx("tr", { "data-test": "ring-table-header-row", children: _jsx("th", { className: classNames(style.headerCell, style.caption), colSpan: regularCells.length + 1, "data-test": "ring-table-header-cell", children: caption }) })), _jsx("tr", { className: style.subHeader, "data-test": "ring-table-header-row", children: regularCells })] }));
    }
}
