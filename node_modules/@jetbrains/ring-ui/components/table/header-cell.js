import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PureComponent } from 'react';
import classNames from 'classnames';
import sortableIcon from '@jetbrains/icons/unsorted-12px';
import sortedIcon from '@jetbrains/icons/chevron-12px-down';
import Icon from '../icon/icon';
import dataTests from '../global/data-tests';
import style from './table.css';
export default class HeaderCell extends PureComponent {
    static defaultProps = {
        onSort: () => { },
    };
    sortable;
    sorted;
    onClick = () => {
        if (this.sortable) {
            const { column, onSort, sortOrder } = this.props;
            onSort({ column, order: !(this.sorted && sortOrder) });
        }
    };
    onChildrenClick(e) {
        e.stopPropagation();
    }
    render() {
        const { className, column, onSort, sortKey, sortOrder, 'data-test': dataTest, ...restProps } = this.props;
        this.sortable = column.sortable === true;
        this.sorted = sortKey === column.id;
        const glyph = this.sorted ? sortedIcon : sortableIcon;
        const classes = classNames(className, column.headerClassName, {
            [style.headerCell]: true,
            [style.headerCellSortable]: this.sortable,
            [style.headerCellSorted]: this.sorted,
            [style.sortedUp]: sortOrder && this.sorted,
            [style.cellRight]: column.rightAlign,
        });
        return (_jsxs("th", { ...restProps, className: classes, onClick: this.onClick, "data-test": dataTests('ring-table-header-cell', dataTest), children: [_jsx("span", { onClick: this.onChildrenClick, role: "presentation", children: this.props.children }), column.getHeaderValue ? column.getHeaderValue() : column.title, this.sortable && (_jsx("span", { className: style.sorter, children: _jsx(Icon, { glyph: glyph, className: style.icon }) }))] }));
    }
}
