import { InputHTMLAttributes } from 'react';
import * as React from 'react';
import { Levels } from '../heading/heading';
import { Size } from '../input/input';
export { Levels };
export { Size };
export interface EditableHeadingTranslations {
    save: string;
    cancel: string;
}
export type EditableHeadingProps = Omit<InputHTMLAttributes<HTMLInputElement | HTMLTextAreaElement>, 'value' | 'size'> & {
    level?: Levels;
    headingClassName?: string | null;
    inputClassName?: string | null;
    isEditing?: boolean;
    isSavingPossible?: boolean;
    isSaving?: boolean;
    children?: string;
    embedded?: boolean;
    size?: Size;
    onEdit?: () => void;
    onSave?: () => void;
    onCancel?: () => void;
    'data-test'?: string | null;
    error?: string;
    multiline?: boolean;
    maxInputRows?: number;
    renderMenu?: () => React.ReactNode;
    translations?: EditableHeadingTranslations;
};
export declare const EditableHeading: (props: EditableHeadingProps) => import("react/jsx-runtime").JSX.Element;
declare const _default: React.MemoExoticComponent<(props: EditableHeadingProps) => import("react/jsx-runtime").JSX.Element>;
export default _default;
