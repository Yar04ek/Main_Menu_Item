import { jsxs as _jsxs } from "react/jsx-runtime";
import { createElement as _createElement } from "react";
import { Component } from 'react';
import classNames from 'classnames';
import Tag from '../tag/tag';
function noop() { }
/**
 * @name Tags List
 */
export default class TagsList extends Component {
    static defaultProps = {
        customTagComponent: null,
        canNotBeEmpty: false,
        disabled: false,
        handleClick: () => noop,
        handleRemove: () => noop,
    };
    renderTag(tag, focusTag) {
        const TagComponent = this.props.customTagComponent || Tag;
        const readOnly = this.props.disabled || tag.readOnly || (this.props.canNotBeEmpty && this.props.tags.length === 1);
        const { tagClassName } = this.props;
        return (_createElement(TagComponent, { ...tag, key: tag.key, readOnly: readOnly, disabled: this.props.disabled || tag.disabled, focused: focusTag, onClick: this.props.handleClick(tag), onRemove: this.props.handleRemove(tag), className: tagClassName }, tag.label));
    }
    render() {
        const { children, className, customTagComponent, canNotBeEmpty, handleClick, tagClassName, handleRemove, tags, activeIndex, ...props } = this.props;
        const classes = classNames('ring-js-shortcuts', className);
        const tagsList = (this.props.tags || []).map((tag, index) => this.renderTag(tag, this.props.activeIndex === index));
        return (_jsxs("div", { "data-test": "ring-tags-list", className: classes, ...props, children: [tagsList, children] }));
    }
}
