import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PureComponent } from 'react';
import classNames from 'classnames';
import { endOfMonth } from 'date-fns/endOfMonth';
import { format } from 'date-fns/format';
import { isThisMonth } from 'date-fns/isThisMonth';
import { set } from 'date-fns/set';
import { startOfDay } from 'date-fns/startOfDay';
import { startOfYear } from 'date-fns/startOfYear';
import linearFunction from '../global/linear-function';
import MonthSlider from './month-slider';
import { YEAR, MIDDLE_DAY, yearScrollSpeed } from './consts';
import styles from './date-picker.css';
class MonthName extends PureComponent {
    handleClick = () => {
        const end = endOfMonth(this.props.month);
        this.props.onScrollChange(end.getTime());
    };
    render() {
        const { month, locale } = this.props;
        return (_jsx("button", { type: "button", className: classNames(styles.monthName, {
                [styles.today]: isThisMonth(month),
            }), onClick: this.handleClick, children: format(month, 'LLL', { locale }) }));
    }
}
export default function MonthNames(props) {
    const { scrollDate, locale } = props;
    const months = [];
    for (let i = 0; i < YEAR; i++) {
        const middleDay = set(scrollDate, { month: i, date: MIDDLE_DAY });
        months.push(startOfDay(middleDay));
    }
    const pxToDate = linearFunction(0, Number(startOfYear(scrollDate)), yearScrollSpeed);
    let top = 0;
    let bottom = 0;
    if (props.currentRange) {
        [top, bottom] = props.currentRange.map(date => Math.floor(pxToDate.x(Number(date))));
    }
    return (_jsxs("div", { className: styles.monthNames, children: [months.map(month => (_jsx(MonthName, { month: month, onScrollChange: props.onScrollChange, locale: locale }, +month))), props.currentRange && (_jsx("div", { className: styles.range, style: {
                    top: top - 1,
                    height: bottom + 1 - (top - 1),
                } })), _jsx(MonthSlider, { ...props, pxToDate: pxToDate })] }));
}
