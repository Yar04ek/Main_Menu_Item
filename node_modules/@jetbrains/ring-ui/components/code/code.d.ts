import { PureComponent, Ref } from 'react';
import highlight from 'highlight.js/lib/core';
declare function noop(): void;
export interface CodeProps {
    code: string;
    inline: boolean;
    softWrap: boolean;
    replacer: (element: HTMLElement | null) => void;
    className?: string | null | undefined;
    language?: string | null | undefined;
    codeRef?: Ref<HTMLElement> | null | undefined;
}
/**
 * @name Code
 */
export default class Code extends PureComponent<CodeProps> {
    static defaultProps: {
        inline: boolean;
        softWrap: boolean;
        replacer: typeof noop;
    };
    componentDidMount(): void;
    componentDidUpdate(): void;
    code?: HTMLElement | null;
    highlight(): Promise<void>;
    get codeRef(): HTMLElement | null | undefined;
    get initCodeRef(): import("react").RefObject<HTMLElement> | ((ref: HTMLElement | null) => void);
    render(): import("react/jsx-runtime").JSX.Element;
}
declare const code: (strings: TemplateStringsArray, ...interpolations: unknown[]) => void;
export { code, highlight };
