import { jsx as _jsx } from "react/jsx-runtime";
import { useCallback, useId, useMemo, useState } from 'react';
import { CollapseContext } from './collapse-context';
import { BASE_ANIMATION_DURATION } from './consts';
/**
 * @name Collapse
 */
export const Collapse = ({ children, duration = BASE_ANIMATION_DURATION, disableAnimation = false, className = '', onChange = () => { }, defaultCollapsed = true, collapsed = null, }) => {
    const [innerCollapsed, setInnerCollapsed] = useState(defaultCollapsed);
    const id = useId();
    const finalCollapsedValue = useMemo(() => collapsed ?? innerCollapsed, [innerCollapsed, collapsed]);
    const setCollapsed = useCallback(() => {
        setInnerCollapsed(!finalCollapsedValue);
        onChange(!finalCollapsedValue);
    }, [setInnerCollapsed, onChange, finalCollapsedValue]);
    return (_jsx("div", { className: className, children: _jsx(CollapseContext.Provider, { value: {
                collapsed: finalCollapsedValue,
                setCollapsed,
                duration,
                disableAnimation,
                id,
            }, children: children }) }));
};
export default Collapse;
