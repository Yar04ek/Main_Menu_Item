/**
 * @description Provides a set of utilities for URL manipulation.
 */
/**
 * @const {RegExp}
 */
export declare const ENDING_SLASH_PATTERN: RegExp;
/**
 * Get URI from the <base> tag
 * @return {string|undefined} base URI
 */
export declare function getBaseURI(): string | undefined;
/**
 * Get absolute URI from the <base> tag
 * @return {string} absolute base URI
 */
export declare function getAbsoluteBaseURL(): string;
/**
 * Get origin from the URL
 * @param {string} url URL to extract origin from
 * @returns {string|undefined} origin
 */
export declare function getOrigin(url: string): string | undefined;
/**
 * Get absolute URI from current page
 * @return {string} absolute URL of current page
 */
export declare function getAbsoluteURL(): string;
/**
 * Fixes the URL
 * If the URL is relative and the page contains a <base> TAG, the URL will be converted to absolute
 * <base href="/">: some/path => /some/path
 * @param {string} url URL to fix
 * @param {Function} baseURIGetter a function that returns base URI
 * @return {string} fixed URL
 */
export declare function fixUrl(url: string, baseURIGetter?: typeof getBaseURI): string;
export declare function joinBaseURLAndPath(baseUrl: string | null | undefined, path: string): string;
/**
 * Parses a queryString into an object.
 * ```
 * parseQueryString("access_token=2YotnFZFEjr1zCsicMWpAA&state=xyz&token_type=example&expires_in=3600");
 * // is {access_token: "2YotnFZFEjr1zCsicMWpAA", state: "xyz", token_type: "example", expires_in: "3600"}
 * ```
 * @param {string} queryString query parameter string to parse
 * @return {AuthResponse} object with query parameters map
 */
export declare function parseQueryString(queryString: string | null | undefined): Record<string, string>;
/**
 * Takes a URL as input and a params object.
 * Each property in the params is added to the URL as query string parameters
 * @param {string} url URL to add parameters to
 * @param {Object} params parameters to add
 * @returns {string} encoded URL
 */
export declare function encodeURL(url: string, params: Record<string, unknown>): string;
export declare function isDataURI(uri: string): boolean;
