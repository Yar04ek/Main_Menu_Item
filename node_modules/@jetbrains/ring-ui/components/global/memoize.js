export default function memoize(fn) {
    const primitiveCache = new Map();
    const objectCache = new WeakMap();
    return function memoized(arg) {
        const key = arg ?? '__singleValue__';
        const cache = key instanceof Object ? objectCache : primitiveCache;
        const cached = cache.get(key);
        if (cached != null) {
            return cached;
        }
        const value = fn(arg);
        cache.set(key, value);
        return value;
    };
}
