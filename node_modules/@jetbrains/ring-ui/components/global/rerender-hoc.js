import { jsx as _jsx } from "react/jsx-runtime";
import { Component, forwardRef } from 'react';
import { createComposedRef } from './composeRefs';
export default function rerenderHOC(ComposedComponent) {
    class Rerenderer extends Component {
        state = this.props.props;
        composedRef = createComposedRef();
        render() {
            const ref = this.composedRef(this.props.forwardedRef);
            return (_jsx(ComposedComponent, { ...this.state, ref: instance => ref(instance != null ? { ...instance, rerender: this.setState.bind(this) } : null) }));
        }
    }
    return forwardRef(function RerendererForwardRef(props, ref) {
        return _jsx(Rerenderer, { props: props, forwardedRef: ref });
    });
}
