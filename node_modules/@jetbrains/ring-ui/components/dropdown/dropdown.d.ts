import { Component, HTMLAttributes, ReactNode, ReactElement } from 'react';
import * as React from 'react';
import { PopupAttrs } from '../popup/popup';
import Anchor from './anchor';
export interface AnchorProps {
    active: boolean;
    pinned: boolean;
}
export interface DropdownChildProps {
    hidden: boolean;
    onCloseAttempt: () => void;
    onMouseDown?: () => void | undefined;
    onContextMenu?: () => void | undefined;
    dontCloseOnAnchorClick: boolean;
}
export type DropdownChildrenFunction = (props: Omit<PopupAttrs, 'children'>) => ReactNode;
export type DropdownChildren = ReactElement<PopupAttrs> | DropdownChildrenFunction;
export interface DropdownProps extends Omit<HTMLAttributes<HTMLElement>, 'children'> {
    /**
     * Can be string, React element, or a function accepting an object with {active, pinned} properties and returning a React element
     * React element should render some interactive HTML element like `button` or `a`
     */
    anchor: ReactElement | readonly ReactElement[] | string | ((props: AnchorProps) => ReactNode);
    children: DropdownChildren;
    initShown: boolean;
    disabled?: boolean | null | undefined;
    clickMode: boolean;
    hoverMode: boolean;
    hoverShowTimeOut: number;
    hoverHideTimeOut: number;
    onShow: () => void;
    onHide: () => void;
    activeClassName?: string | null | undefined;
    'data-test'?: string | null | undefined;
}
interface DropdownState {
    show: boolean;
    pinned: boolean;
}
/**
 * @name Dropdown
 */
export default class Dropdown extends Component<DropdownProps, DropdownState> {
    static defaultProps: {
        initShown: boolean;
        clickMode: boolean;
        hoverMode: boolean;
        hoverShowTimeOut: number;
        hoverHideTimeOut: number;
        disabled: boolean;
        onShow: () => void;
        onHide: () => void;
        onMouseEnter: () => void;
        onMouseLeave: () => void;
    };
    state: {
        show: boolean;
        pinned: boolean;
    };
    onClick: () => void;
    onChildCloseAttempt: () => void;
    hoverTimer?: number | null;
    onMouseEnter: (event: React.MouseEvent<HTMLElement>) => void;
    onMouseLeave: (event: React.MouseEvent<HTMLElement>) => void;
    handlePopupInteraction: () => void;
    toggle(show?: boolean): void;
    _toggle(show: boolean, pinned?: boolean): void;
    _clearTimer(): void;
    render(): import("react/jsx-runtime").JSX.Element;
}
export type DropdownAttrs = React.JSX.LibraryManagedAttributes<typeof Dropdown, DropdownProps>;
export { Anchor };
