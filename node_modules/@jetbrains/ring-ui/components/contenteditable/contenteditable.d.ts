import { Component, HTMLAttributes, Ref } from 'react';
/**
 * @name ContentEditable
 */
declare function noop(): void;
export interface ContentEditableBaseProps extends HTMLAttributes<HTMLElement> {
    disabled: boolean;
    onComponentUpdate: (prevProps: ContentEditableBaseProps) => void;
    inputRef?: Ref<HTMLDivElement> | null | undefined;
    __html: string;
}
declare class ContentEditableBase extends Component<ContentEditableBaseProps> {
    static defaultProps: {
        disabled: boolean;
        tabIndex: number;
        onInput: typeof noop;
        onComponentUpdate: typeof noop;
    };
    shouldComponentUpdate(nextProps: ContentEditableBaseProps): boolean;
    componentDidUpdate(prevProps: ContentEditableBaseProps): void;
    render(): import("react/jsx-runtime").JSX.Element;
}
type ContentEditableBaseAttrs = React.JSX.LibraryManagedAttributes<typeof ContentEditableBase, ContentEditableBaseProps>;
export type ContentEditableProps = Omit<ContentEditableBaseAttrs, '__html'>;
declare const ContentEditable: ({ children, ...props }: ContentEditableProps) => import("react/jsx-runtime").JSX.Element;
export default ContentEditable;
