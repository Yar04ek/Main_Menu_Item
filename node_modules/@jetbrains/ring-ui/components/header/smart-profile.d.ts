import { PureComponent } from 'react';
import Auth, { AuthUser } from '../auth/auth';
import { Size } from '../avatar/avatar';
import { ProfileAttrs } from './profile';
export interface SmartProfileProps extends ProfileAttrs {
    auth: Auth;
}
interface SmartProfileState {
    user: AuthUser | null | undefined | void;
    size: Size;
    isLogoutPostponed: boolean;
    isUserChangePostponed: boolean;
    loading?: boolean;
}
export default class SmartProfile extends PureComponent<SmartProfileProps, SmartProfileState> {
    state: SmartProfileState;
    componentDidMount(): void;
    static Size: typeof Size;
    login: () => Promise<void>;
    logout: () => Promise<void>;
    switchUser: () => Promise<void>;
    onRevertPostponement: () => void;
    requestUser(): Promise<void>;
    checkUserCertificateMismatch(user: AuthUser): void;
    render(): import("react/jsx-runtime").JSX.Element;
}
export {};
