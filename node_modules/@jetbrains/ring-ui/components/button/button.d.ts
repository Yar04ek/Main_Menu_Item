import { PureComponent, ButtonHTMLAttributes } from 'react';
import * as React from 'react';
import { IconProps, IconType, Size } from '../icon/icon';
import { ClickableLinkProps } from '../link/clickableLink';
import { ControlsHeight, ControlsHeightContext } from '../global/controls-height';
export interface ButtonBaseProps {
    height?: ControlsHeight | undefined;
    active?: boolean | null | undefined;
    danger?: boolean | null | undefined;
    delayed?: boolean | null | undefined;
    loader?: boolean | null | undefined;
    primary?: boolean | null | undefined;
    success?: boolean | null | undefined;
    error?: boolean | null | undefined;
    secondary?: boolean | null | undefined;
    ghost?: boolean | null | undefined;
    short?: boolean | null | undefined;
    /**
     * @deprecated Use inline instead
     */
    text?: boolean | null | undefined;
    inline?: boolean | null | undefined;
    dropdown?: boolean | null | undefined;
    disabled?: boolean | undefined;
    icon?: string | IconType | null | undefined;
    iconSize?: IconProps['size'];
    iconClassName?: string | null | undefined;
    iconSuppressSizeWarning?: boolean | null | undefined;
}
export interface ButtonButtonProps extends ButtonHTMLAttributes<HTMLButtonElement>, ButtonBaseProps {
    href?: undefined;
}
export interface ButtonLinkProps extends ClickableLinkProps, ButtonBaseProps {
    autoFocus?: never;
    href: string;
}
export type ButtonProps = ButtonButtonProps | ButtonLinkProps;
/**
 * @name Button
 */
/**
 * A component for displaying variously styled buttons.
 */
export declare class Button extends PureComponent<ButtonProps> {
    static IconSize: typeof Size;
    static contextType: React.Context<ControlsHeight>;
    context: React.ContextType<typeof ControlsHeightContext>;
    buttonRef: React.RefObject<HTMLButtonElement>;
    render(): import("react/jsx-runtime").JSX.Element;
}
export { Size as IconSize };
export type ContainerProps<T extends ButtonProps> = React.JSX.LibraryManagedAttributes<typeof Button, T>;
export type ButtonAttrs = ContainerProps<ButtonButtonProps> | ContainerProps<ButtonLinkProps>;
export default Button;
