import { AnalyticsPlugin, Serializable } from './analytics';
export interface AnalyticsCustomPluginData {
    category: string;
    action: string;
    data?: Record<string, Serializable>;
    timestamp: number;
}
export interface AnalyticsCustomPluginConfig {
    send: (data: AnalyticsCustomPluginData[]) => void;
    isDevelopment?: boolean | undefined;
    flushInterval?: number | undefined;
    flushMaxPackSize?: number | undefined;
}
export default class AnalyticsCustomPlugin implements AnalyticsPlugin {
    _data: AnalyticsCustomPluginData[];
    private _flush?;
    private _isDevelopment?;
    private _flushInterval?;
    private _flushMaxPackSize?;
    private _hasSendSchedule?;
    constructor(send: AnalyticsCustomPluginConfig['send'], isDevelopment?: AnalyticsCustomPluginConfig['isDevelopment'], flushInterval?: AnalyticsCustomPluginConfig['flushInterval']);
    config(config: AnalyticsCustomPluginConfig): void;
    trackEvent(category: string, action: string, additionalData?: Record<string, Serializable>): void;
    trackPageView(path: string, data?: Record<string, Serializable>): void;
    private _initSendSchedule;
    private _processEvent;
    private _addDataToFlushingPack;
}
