import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PureComponent } from 'react';
import classNames from 'classnames';
import dataTests from '../global/data-tests';
import ControlHelp from '../control-help/control-help';
import styles from './toggle.css';
export const Size = {
    Size14: styles.size14,
    Size16: styles.size16,
    Size20: styles.size20,
};
class Toggle extends PureComponent {
    static defaultProps = {
        size: Size.Size16,
    };
    render() {
        const { className, children, disabled, title, leftLabel, size = Size.Size16, 'data-test': dataTest, help, onTransitionEnd, ...restProps } = this.props;
        const classes = classNames(className, size, styles.toggle, disabled && styles.disabled);
        return (_jsxs("label", { className: classes, title: title, "data-test": dataTests('ring-toggle', dataTest), children: [leftLabel && (_jsxs("span", { className: styles.leftLabel, children: [leftLabel, help && _jsx(ControlHelp, { className: styles.help, children: help })] })), _jsxs("span", { className: styles.switchWrapper, children: [_jsx("input", { "data-test": "ring-toggle-input", ...restProps, type: "checkbox", disabled: disabled, className: styles.input }), _jsx("span", { className: styles.switch, onTransitionEnd: onTransitionEnd })] }), children && (_jsxs("div", { className: styles.label, children: [children, help && _jsx(ControlHelp, { className: styles.help, children: help })] }))] }));
    }
}
export default Toggle;
