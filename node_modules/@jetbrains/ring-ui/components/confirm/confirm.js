import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PureComponent } from 'react';
import Dialog from '../dialog/dialog';
import Button from '../button/button';
import { Content, Header } from '../island/island';
import Panel from '../panel/panel';
import styles from './confirm.css';
/**
 * @name Confirm
 */
export default class Confirm extends PureComponent {
    static defaultProps = {
        text: null,
        description: null,
        show: false,
        rejectOnEsc: true,
        inProgress: false,
        cancelIsDefault: false,
        confirmLabel: 'OK',
        rejectLabel: 'Cancel',
        onConfirm: () => { },
        onReject: () => { },
    };
    onEscPress = () => {
        if (this.props.rejectOnEsc) {
            this.props.onReject();
        }
    };
    render() {
        const { show, className, inProgress, cancelIsDefault, text, description, confirmLabel, rejectLabel, onConfirm, onReject, native, } = this.props;
        return (_jsxs(Dialog, { label: text || (typeof description === 'string' ? description : undefined), className: className, onEscPress: this.onEscPress, show: show, trapFocus: true, "data-test": "ring-confirm", native: native, children: [text && _jsx(Header, { children: text }), description && (_jsx(Content, { children: _jsx("div", { className: styles.description, children: description }) })), _jsxs(Panel, { children: [_jsx(Button, { "data-test": "confirm-ok-button", primary: !cancelIsDefault, loader: inProgress, disabled: inProgress, onClick: onConfirm, children: confirmLabel }), _jsx(Button, { "data-test": "confirm-reject-button", onClick: onReject, disabled: inProgress, primary: cancelIsDefault, children: rejectLabel })] })] }));
    }
}
