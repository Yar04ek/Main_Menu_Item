import { PureComponent, ReactNode } from 'react';
import * as React from 'react';
export interface ConfirmProps {
    text: string;
    description: ReactNode;
    show: boolean;
    rejectOnEsc: boolean;
    inProgress: boolean;
    cancelIsDefault: boolean;
    confirmLabel: string;
    rejectLabel: string;
    onConfirm: (event: React.MouseEvent<HTMLButtonElement>) => void;
    onReject: (event?: React.MouseEvent<HTMLButtonElement>) => void;
    className?: string | undefined;
    native?: boolean;
}
/**
 * @name Confirm
 */
export default class Confirm extends PureComponent<ConfirmProps> {
    static defaultProps: {
        text: null;
        description: null;
        show: boolean;
        rejectOnEsc: boolean;
        inProgress: boolean;
        cancelIsDefault: boolean;
        confirmLabel: string;
        rejectLabel: string;
        onConfirm: () => void;
        onReject: () => void;
    };
    onEscPress: () => void;
    render(): import("react/jsx-runtime").JSX.Element;
}
export type ConfirmAttributes = React.JSX.LibraryManagedAttributes<typeof Confirm, ConfirmProps>;
