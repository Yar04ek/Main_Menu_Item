import { ReactElement, ReactNode } from 'react';
import { ButtonButtonProps, ContainerProps } from '../button/button';
import { TabProps } from './tab';
export interface FakeMoreButtonProps {
    hasActiveChildren: boolean;
    moreClassName?: string | null | undefined;
    moreActiveClassName?: string | null | undefined;
}
export declare const AnchorLink: ({ hasActiveChildren, moreClassName, moreActiveClassName, ...restProps }: Omit<ContainerProps<ButtonButtonProps>, "children"> & FakeMoreButtonProps) => import("react/jsx-runtime").JSX.Element;
export interface MoreButtonProps {
    items: ReactElement<TabProps>[];
    selected?: string | undefined;
    onSelect?: ((key: string) => () => void) | null | undefined;
    moreClassName?: string | null | undefined;
    moreActiveClassName?: string | null | undefined;
    morePopupClassName?: string | null | undefined;
    morePopupItemClassName?: string | undefined;
    morePopupBeforeEnd: ReactNode;
}
export declare const MoreButton: import("react").MemoExoticComponent<({ items, selected, onSelect, moreClassName, moreActiveClassName, morePopupClassName, morePopupItemClassName, morePopupBeforeEnd, }: MoreButtonProps) => import("react/jsx-runtime").JSX.Element | null>;
export declare const FakeMoreButton: import("react").MemoExoticComponent<({ moreClassName, moreActiveClassName, hasActiveChildren }: FakeMoreButtonProps) => import("react/jsx-runtime").JSX.Element>;
