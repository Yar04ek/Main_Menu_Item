import { jsx as _jsx } from "react/jsx-runtime";
import * as React from 'react';
import classNames from 'classnames';
import styles from './tabs.css';
import TabLink from './tab-link';
import { CustomItem } from './custom-item';
const TabTitle = React.memo(function TabTitle({ selected, child, handleSelect, collapsed = false, tabIndex, }) {
    if (child == null || typeof child !== 'object' || child.type === CustomItem) {
        return child;
    }
    const { title, titleProps, disabled, href, className, activeClassName, collapsedClassName, collapsedActiveClassName } = child.props;
    const titleClasses = classNames(styles.title, className, {
        [styles.selected]: selected,
        [styles.collapsed]: collapsed,
        [activeClassName ?? '']: selected,
        [collapsedClassName ?? '']: collapsed,
        [collapsedActiveClassName ?? '']: collapsed && selected,
    });
    return (_jsx(TabLink, { title: title, isSelected: selected, active: true, href: href, className: titleClasses, disabled: disabled, onPlainLeftClick: handleSelect, tabIndex: tabIndex, collapsed: collapsed, ...titleProps }));
});
const getTabTitles = ({ items, selected = '0', collapsed, onSelect = () => undefined, ...props }) => items.map((tab, index) => {
    const key = tab.props.id || String(index);
    const isSelected = selected === key;
    return (_jsx(TabTitle, { handleSelect: onSelect(key), selected: isSelected, child: tab, collapsed: collapsed, ...props }, key));
});
export default getTabTitles;
