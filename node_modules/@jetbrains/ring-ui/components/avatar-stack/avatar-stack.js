import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Children, useState } from 'react';
import classNames from 'classnames';
import DropdownMenu from '../dropdown-menu/dropdown-menu';
import Avatar, { Size } from '../avatar/avatar';
import { fontSizes } from '../avatar/avatar-info';
import styles from './avatar-stack.css';
export default function AvatarStack({ children, className, size = Size.Size20, extraItems, dropdownMenuProps, ...restProps }) {
    const [dropdownOpen, setDropdownOpen] = useState(false);
    return (_jsxs("div", { className: classNames(styles.avatarStack, className, styles[`size${size}`], {
            [styles.hovered]: dropdownOpen,
        }), ...restProps, style: { height: size, ...restProps.style }, children: [Children.map(children, (child, index) => (_jsx("div", { className: styles.item, style: { '--ring-avatar-stack-index': index }, children: child }))), extraItems?.length ? (_jsx(DropdownMenu, { hoverMode: true, hoverShowTimeOut: 10, onShow: () => setDropdownOpen(true), onHide: () => setDropdownOpen(false), className: styles.extra, style: {
                    width: size,
                    height: size,
                    '--ring-avatar-stack-index': Children.count(children),
                    fontSize: fontSizes[size],
                }, anchor: _jsx("button", { type: "button", className: styles.extraButton, children: _jsx(Avatar, { size: size, info: _jsx("span", { className: styles.extraText, children: `+${extraItems.length}` }) }) }), data: extraItems, menuProps: { offset: 4, ...dropdownMenuProps?.menuProps }, ...dropdownMenuProps })) : null] }));
}
