import { Component, InputHTMLAttributes, ReactNode } from 'react';
export interface RadioProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'> {
    value?: string | undefined;
    onChange?: ((value: string) => void) | null | undefined;
}
export declare const RadioContext: import("react").Context<RadioProps>;
export interface RadioItemInnerProps extends InputHTMLAttributes<HTMLInputElement> {
    help?: ReactNode;
}
export declare class RadioItemInner extends Component<RadioItemInnerProps> {
    uid: string;
    input?: HTMLElement | null;
    inputRef: (el: HTMLElement | null) => void;
    label?: HTMLElement | null;
    labelRef: (el: HTMLElement | null) => void;
    render(): import("react/jsx-runtime").JSX.Element;
}
export interface RadioItemProps extends RadioItemInnerProps {
    value: string;
}
declare const RadioItem: import("react").ForwardRefExoticComponent<RadioItemProps & import("react").RefAttributes<RadioItemInner>>;
export default RadioItem;
